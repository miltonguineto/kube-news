apiVersion: v1
kind: Secret
metadata:
  name: kube-news-secret
  namespace: default
type: Opaque
data:
  db-password: UGcjMTIz  # Base64 encoded "Pg#123" - Change this in production!
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-news-config
  namespace: default
data:
  DB_DATABASE: "kubedevnews"
  DB_USERNAME: "kubedevnews"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_SSL_REQUIRE: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: default
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_DATABASE
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_USERNAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kube-news-secret
              key: db-password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kube-news-service
  namespace: default
spec:
  selector:
    app: kube-news
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-news-deployment
  namespace: default
  labels:
    app: kube-news
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kube-news
  template:
    metadata:
      labels:
        app: kube-news
    spec:
      containers:
      - name: kube-news
        image: miltonguineto/kube-news:v1.0.1
        ports:
        - containerPort: 8080
        env:
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_DATABASE
        - name: DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kube-news-secret
              key: db-password
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_PORT
        - name: DB_SSL_REQUIRE
          valueFrom:
            configMapKeyRef:
              name: kube-news-config
              key: DB_SSL_REQUIRE
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kube-news-monitor
  namespace: default
  labels:
    app: kube-news
spec:
  selector:
    matchLabels:
      app: kube-news
  endpoints:
  - port: http
    path: /metrics
    interval: 30s